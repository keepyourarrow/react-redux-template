{"version":3,"sources":["components/App/Shared/Image/Image.module.css","components/App/Views/LoginPage/LoginPage.module.css","components/App/App.module.css","components/App/Views/AdminPage/AdminPage.module.css","components/App/Views/Forbidden/Forbidden.module.css","components/App/Shared/PostCard/PostCard.module.css","components/App/Views/PostListPage/PostListPage.module.css","components/App/Views/Toolbar/Toolbar.module.css","utils/other.js","services/mockApiClient/mockApiClient.js","services/mockApiClient/index.js","store/db/schemas.js","store/db/selectors.js","store/db/actions.js","store/db/reducer.js","store/api/getPosts.js","store/queries/queries.js","store/queries/index.js","store/api/getMyFavoritePosts.js","store/api/logIn.js","store/api/logOut.js","store/api/likePost.js","store/api/unlikePost.js","store/api/index.js","components/Universal/Transitions/FadeIn/index.js","components/Universal/Transitions/FadeIn/FadeIn.js","components/Universal/Transitions/FadeOut/index.js","components/Universal/Transitions/FadeOut/FadeOut.js","components/App/Shared/Image/Image.js","components/App/Shared/Image/index.js","components/App/Shared/PostCard/PostCard.js","components/App/Shared/PostCard/index.js","store/other/session.js","components/App/Shared/PrivateRoute/PrivateRoute.js","components/App/Shared/PrivateRoute/index.js","components/Universal/Loading/Loading.js","components/Universal/Loading/index.js","components/Universal/PromiseButtonBase/PromiseButtonBase.js","components/Universal/PromiseButtonBase/index.js","components/Universal/Notification/Notification.js","components/Universal/Notification/index.js","components/App/Shared/PromiseButton/index.js","components/App/Shared/PromiseButton/PromiseButton.js","components/App/Shared/FlatButton/FlatButton.js","components/App/Shared/FlatButton/index.js","store/other/notifications.js","components/App/Shared/Notifications/Notifications.js","components/App/Shared/Notifications/index.js","components/App/Views/LoginPage/LoginPage.js","components/App/Views/PostListPage/PostListPage.js","components/App/Views/AdminPage/AdminPage.js","enums/enums.js","components/App/Views/Toolbar/Toolbar.js","utils/authUtils.js","components/App/Views/Forbidden/Forbidden.js","components/App/Views/FavoritePostsPage/FavoritePostsPage.js","components/App/theme.js","components/App/index.js","components/App/App.js","serviceWorker.js","store/other/index.js","store/initStore.js","store/index.js","store/localStorage.js","index.js","components/App/Views/FavoritePostsPage/FavoritePostsPage.module.css"],"names":["module","exports","imgContainer","zoomImgOnHover","loader","root","loginForm","app","body","pageContainer","cardTitle","cardImage","cardAuthor","cardDate","cardContentDivider","heartIcon","pageLoading","gridItem","pagination","paginationButton","paginationButtonActive","Toolbar","toolbarButton","right","makeEnum","array","Array","Error","enumObj","forEach","type","Object","freeze","Proxy","get","target","prop","receiver","undefined","concat","Reflect","apply","arguments","timeout","ms","Promise","resolve","setTimeout","posts","slice","loggedInUser","users","mockApiClient","MockApiClient","token","classCallCheck","this","headers","setToken","email","password","TIMEOUT_MS","user","page","perPage","numPages","Math","ceil","length","filter","post","likes","includes","id","find","p","Authorization","window","localStorage","getItem","UserSchema","schema","Entity","idAttribute","PostSchema","author","getEntities","state","entities","createEntitySelector","entityName","ids","values","schemas","key","createSelector","denormalize","updateEntities","createAction","reducer","handleActions","defineProperty","dbActions","action","mergeWith","payload","objValue","srcValue","isArray","Post","User","namespace","responseSchema","options","dispatch","getPosts","then","data","normalizedData","normalize","result","PENDING","FULFILLED","REJECTED","actions","_handleActions","objectSpread","pending","fulfilled","rejected","error","selectors","_selectors","dbSelectors","queries","tags","addIds","setIds","removeIds","validatePayload","valid","message","queryEntity","entity","tag","queries_handleActions","validation","_action$payload","toConsumableArray","_action$payload2","_action$payload3","my-favorites","getQueries","createIdsSelector","ducks","queriesDuck","reducers","reduce","reducerMap","duck","actionsMap","selectorsMap","getMyFavoritePosts","queryActions","getMyFavoritePosts_handleActions","getMyFavoritePosts_selectors","logIn","session","value","logIn_handleActions","logIn_selectors","logOut","logOut_handleActions","logOut_selectors","postId","likePost","likePost_handleActions","likePost_selectors","unlikePost","unlikePost_handleActions","unlikePost_selectors","getPostsDuck","logInDuck","logOutDuck","likePostDuck","unlikePostDuck","getMyFavoritePostsDuck","FadeIn","props","react_default","a","createElement","react_transition_group","className","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","children","FadeOut","transitionEnterTimeout","transitionLeaveTimeout","Image","_this","_this$props","zoomOnHover","style","other","objectWithoutProperties","es_default","assign","container","styles","join","Transitions_FadeIn","React","Component","defaultProps","PostCard","index_es","elevation","square","Shared_Image","src","image","item","xs","title","name","dist_default","fromNow","ago","timestamp","size","color","flex","liked","Favorite_default","onClick","FavoriteBorder_default","mapDispatchToProps","apiActions","connect","session_handleActions","getSession","PrivateRoute","component","permittedRoles","location","Route","render","Redirect","to","pathname","from","intersection","roles","sessionSelectors","withRouter","Loading","possibleConstructorReturn","getPrototypeOf","call","minTimeElapsed","_this2","clearTimeout","minTimeTimeout","setState","_this3","clear","_ismounted","minTime","loading","start","prevProps","prevState","isReady","PromiseButtonBase","promiseState","e","disableOnPending","disableOnFulfilled","disableOnRejected","promise","currentPromise","catch","renderOnPending","renderOnFulfilled","renderOnRejected","Button_default","variants","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","Notification","onClose","startTimer","isEqual","notification","duration","Number","isInteger","classes","variant","Icon","Snackbar_default","anchorOrigin","vertical","horizontal","open","transitionDuration","SnackbarContent_default","classNames","content","aria-describedby","Transitions_FadeOut","icon","iconVariant","IconButton_default","aria-label","close","Close_default","withStyles","theme","backgroundColor","green","palette","dark","blue","amber","fontSize","opacity","marginRight","spacing","unit","display","alignItems","PromiseButton","Universal_PromiseButtonBase","react_spinners","margin","FlatButton","hoverTone","hoverClass","lightTone","darkTone","role","fitParent","overlay","cursor","height","width","position","justifyContent","padding","boxSizing","&:hover","left","top","bottom","transition","showNotification","hideNotification","notifications_handleActions","getMostRecent","Notifications","Universal_Notification","notificationActions","notificationSelectors","LoginPage","onInputChange","history","push","label","onChange","Shared_PromiseButton","PostListPage","getQueryParams","_queryString$parse","queryString","parse","search","_queryString$parse$pa","_queryString$parse$pe","setPage","queryParams","stringify","prev","curr","getPostsPending","postsPage","Universal_Loading","ready","map","sm","lg","Shared_PostCard","range","i","Shared_FlatButton","apiSelectors","getPostsData","AdminPage","rolesEnum","goTo","path","isAuthed","Forbidden","FavoritePostsPage","getMyFavoritePostsPending","noPostsToShow","querySelectors","postIdsSelector","postsSelector","createMuiTheme","typography","useNextVariants","fontFamily","primary","main","secondary","App","core_styles","Views_Toolbar_Toolbar","Shared_Notifications","exact","Shared_PrivateRoute","Admin","Author","Boolean","hostname","match","sessionDuck","notificationsDuck","middleware","thunk","promiseMiddleware","rootReducer","combineReducers","apiReducers","queryReducers","otherReducers","dbReducer","initStore","persistedState","serializedState","JSON","err","loadState","store","createStore","applyMiddleware","subscribe","throttle","getState","setItem","_unused","saveState","sessionNamespace","ReactDOM","es","HashRouter","components_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d6ef5daf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContainer\":\"Image_imgContainer__2qdeE\",\"zoomImgOnHover\":\"Image_zoomImgOnHover__3T2Az\",\"loader\":\"Image_loader__2ntlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoginPage_root__DGr1I fit-viewport-body children-center\",\"loginForm\":\"LoginPage_loginForm__18JQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__htTSY\",\"body\":\"App_body__3xZH0 app-background-color\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"AdminPage_pageContainer__3Qq_y fit-viewport-body children-center\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"Forbidden_pageContainer__2zK98 fit-viewport-body children-center\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardTitle\":\"PostCard_cardTitle__18_kx text-truncate text-md\",\"cardImage\":\"PostCard_cardImage__2FZb6\",\"cardAuthor\":\"PostCard_cardAuthor__2P-rN text-truncate text-sm text-grey-6\",\"cardDate\":\"PostCard_cardDate__1MSpc text-truncate text-sm text-grey-6\",\"cardContentDivider\":\"PostCard_cardContentDivider__3xjk- border-bottom\",\"heartIcon\":\"PostCard_heartIcon__2Uj8D text-primary\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoading\":\"PostListPage_pageLoading__1T6PL fit-viewport-body children-center\",\"pageContainer\":\"PostListPage_pageContainer__2gSz4\",\"gridItem\":\"PostListPage_gridItem__3I9WR\",\"pagination\":\"PostListPage_pagination__2uawz\",\"paginationButton\":\"PostListPage_paginationButton__2rgo6 text-grey-7\",\"paginationButtonActive\":\"PostListPage_paginationButtonActive__3Jx5g background-primary\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3eNSY border-bottom app-background-color\",\"toolbarButton\":\"Toolbar_toolbarButton__2V5aS text-grey-7\",\"right\":\"Toolbar_right__3MvEY\"};","export const makeEnum = (array) => {\n    if (!array instanceof Array) {\n      throw new Error('First argument must be an array!')\n    }\n    let enumObj = {}\n    array.forEach((type) => {\n      enumObj[type] = type\n    })\n    enumObj = Object.freeze(enumObj)\n    return new Proxy(enumObj, {\n      get: function(target, prop, receiver) {\n          if (target[prop] === undefined) {\n            throw new Error(`Type ${prop} does not exist!`)\n          } else {\n            return Reflect.get(...arguments);\n          }\n        }\n    })\n}\n\nexport const timeout = (ms) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","import { timeout } from 'utils/other'\nimport users from './users.json'\nimport allPosts from './posts.json'\nlet posts = allPosts.slice(0, 10)\n\nconst TIMEOUT_MS = 100\nconst token = '12345'\nconst loggedInUser = users[0]\n\nclass MockApiClient {\n\n  constructor (token) {\n    this.headers = {}\n    if (token) {\n      this.setToken(token)\n    }\n  }\n\n  setToken (token) {\n    this.token = token\n    this.headers['Authorization'] = `Bearer ${token.token}`\n  }\n\n  async logIn (email, password) {\n    await timeout(TIMEOUT_MS * 5)\n    this.setToken(token)\n    return {\n      token,\n      user: loggedInUser\n    }\n  }\n\n  async getPosts ({page = 0, perPage = 6} = {}) {\n    await timeout(TIMEOUT_MS)\n    return {\n      page,\n      perPage,\n      numPages: Math.ceil(posts.length / perPage),\n      posts: posts.slice(page * perPage, page * perPage + perPage)\n    }\n  }\n\n  async getMyFavoritePosts() {\n    await timeout(TIMEOUT_MS)\n    return posts.filter(post => post.likes.includes(loggedInUser.id))\n  }\n\n  async likePost (id) {\n    await timeout(TIMEOUT_MS)\n    let post = posts.find((p) => p.id === id)\n    if (post) {\n      // Normally user would be inferred from auth token\n      post.likes = [loggedInUser.id]\n    }\n    return post\n  }\n\n  async unlikePost (id) {\n    await timeout(TIMEOUT_MS)\n    let post = posts.find((p) => p.id === id)\n    if (post) {\n      post.likes = []\n    }\n    return post\n  }\n\n  async logOut () {\n    await timeout(TIMEOUT_MS)\n    delete this.token\n    delete this.headers.Authorization\n  }\n\n}\n\n// Export Singleton\nconst mockApiClient = new MockApiClient(window.localStorage.getItem('token'))\n\nexport default mockApiClient\n","import mockApiClient from './mockApiClient'\n\nexport default mockApiClient\n","import { schema } from 'normalizr'\n\nexport const UserSchema = new schema.Entity(\n  'User',\n  {},\n  {\n    idAttribute: 'id'\n  }\n)\n\nexport const PostSchema = new schema.Entity(\n  'Post',\n  {\n    author: UserSchema\n  },\n  {\n    idAttribute: 'id'\n  }\n)\n","import * as schemas from './schemas'\nimport { denormalize } from 'normalizr'\nimport { createSelector } from 'reselect'\n\nexport const getEntities = state => state.entities\n\nexport const createEntitySelector = (entityName, ids) => {\n  let schema = Object.values(schemas).find(schema => schema.key === entityName)\n  if (!schema) {\n    throw new Error('The entityName provided does not exist!')\n  }\n  let selector = createSelector(\n      getEntities,\n      entities => {\n          return denormalize(ids, [schema], entities)\n      }\n  )\n  return selector\n}\n","import { createAction } from 'redux-actions'\n\nexport const updateEntities = createAction('UPDATE_ENTITIES')\n","import {mergeWith, isArray} from 'lodash'\nimport { handleActions } from 'redux-actions'\nimport * as dbActions from './actions'\n\nconst initialState = {\n  Post: {},\n  User: {},\n}\n\n// Reducer\nconst reducer = handleActions(\n  {\n    [dbActions.updateEntities]: (state, action) => {\n      return mergeWith({}, state, action.payload, function (objValue, srcValue) {\n        if (isArray(objValue)) {\n          return srcValue\n        }\n      })\n    },\n  },\n  initialState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport {\n  schemas,\n  actions as dbActions,\n  selectors as dbSelectors\n} from '../db'\nimport { normalize, denormalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'getPosts'\n\n// Reducer namespace\nexport const namespace = `api/GET_POSTS`\n\nconst responseSchema = {\n  posts: [schemas.PostSchema]\n}\n\n// Actions\nconst action = (options) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.getPosts(options)\n        .then(data => {\n          let normalizedData = normalize(data, responseSchema)\n          dispatch(\n            dbActions.updateEntities(normalizedData.entities)\n          )\n          return normalizedData.result\n        })\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => {\n    return denormalize(state[namespace].data, responseSchema, dbSelectors.getEntities(state))\n  },\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions, createAction } from 'redux-actions'\nimport { createSelector } from 'reselect'\n\nlet queries = {\n  Post: {\n    tags: ['my-favorites']\n  }\n}\n\n// Reducer namespace\nexport const namespace = `queries`\n\nexport const actions = {\n  addIds: createAction('ADD_IDS'),\n  setIds: createAction('SET_IDS'),\n  removeIds: createAction('REMOVE_IDS'),\n}\n\nlet initialState = {\n  Post: {\n    'my-favorites': [],\n  }\n}\n\nconst validatePayload = (payload) => {\n  // Right now all actions take same payload so this works, may need\n  // to add more parameters to this if action contracts start differing\n  if (!payload) {\n    return {\n      valid: false,\n      message: 'Payload must contain entity, tag, and ids'\n    }\n  }\n  if (!payload.ids instanceof Array) {\n    return {\n      valid: false,\n      message: 'Ids must be an Array.'\n    }\n  }\n  let queryEntity = queries[payload.entity]\n  if (queryEntity == null || !queryEntity.tags.includes(payload.tag)) {\n    return {\n      valid: false,\n      message: 'Entity and/or tag does not exist.'\n    }\n  }\n  return {\n    valid: true,\n  }\n}\n\n// Reducer\nexport const reducer = handleActions(\n  {\n    [actions.addIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: [...state[entity][tag], ...ids]\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n    [actions.setIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: ids\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n    [actions.removeIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: state[entity][tag].filter(id => !ids.includes(id))\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n  },\n  initialState\n)\n\nconst getQueries = state => state[namespace]\n\nexport const selectors = {\n  createIdsSelector: (entity, tag) => {\n    let selector = createSelector(\n        getQueries,\n        queries => {\n            return queries[entity][tag]\n        }\n    )\n    return selector\n  },\n}\n","import * as queriesDuck from './queries'\n\nlet ducks = [\n  queriesDuck,\n]\n\n/*\n*  The queries module maintains what we should be fetching\n*  from the db module via the result feild of normalized data.\n*/\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'getMyFavoritePosts'\n\n// Reducer namespace\nexport const namespace = `api/GET_MY_FAVORITE_POSTS`\n\n// Actions\nconst action = (options) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.getMyFavoritePosts()\n        .then(data => {\n          let normalizedData = normalize(data, [schemas.PostSchema])\n          dispatch(\n            dbActions.updateEntities(normalizedData.entities)\n          )\n          dispatch(\n            queryActions.setIds({\n              entity: 'Post',\n              tag: 'my-favorites',\n              ids: normalizedData.result\n            })\n          )\n          return normalizedData.result\n        })\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { normalize } from 'normalizr'\n\n\n// Action types\nconst ACTION_NAME = 'logIn'\n\n// Reducer namespace\nexport const namespace = `api/LOG_IN`\n\nconst responseSchema = {\n  user: schemas.UserSchema\n}\n\n// Actions\nconst action = (email, password) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.logIn(email, password)\n    })\n      .then(data => {\n        let session = data.value;\n        let normalizedData = normalize(session, responseSchema);\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n      })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\n\n\n// Action types\nconst ACTION_NAME = 'logOut'\n\n// Reducer namespace\nexport const namespace = `api/LOG_OUT`\n\n\n// Actions\nconst action = (email, password) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.logOut(email, password)\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { normalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'likePost'\n\n// Reducer namespace\nexport const namespace = `api/LIKE_POST`\n\n// Actions\nconst action = (postId) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.likePost(postId)\n    })\n      .then(data => {\n        let post = data.value\n        let normalizedData = normalize(post, schemas.PostSchema)\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n        // dispatch(\n        //   queryActions.addIds({entity: 'Post', tag: 'my-favorites', ids: [normalizedData.result]})\n        // )\n      })\n  }\n}\n\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'unlikePost'\n\n// Reducer namespace\nexport const namespace = `api/UNLIKE_POST`\n\n// Actions\nconst action = (postId) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.unlikePost(postId)\n    })\n      .then(data => {\n        let post = data.value\n        let normalizedData = normalize(post, schemas.PostSchema)\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n        dispatch(\n          queryActions.removeIds({\n            entity: 'Post',\n            tag: 'my-favorites',\n            ids: [postId]\n          })\n        )\n      })\n  }\n}\n\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import * as getPostsDuck from './getPosts'\nimport * as getMyFavoritePostsDuck from './getMyFavoritePosts'\nimport * as logInDuck from './logIn'\nimport * as logOutDuck from './logOut'\nimport * as likePostDuck from './likePost'\nimport * as unlikePostDuck from './unlikePost'\n\n\n/*\n*  The api module maintains async action info such as promise\n*  state, data, and errors. Api results can also be used to query\n*  the db module in cases where it makes sense.\n*/\n\nlet ducks = [\n  getPostsDuck,\n  logInDuck,\n  logOutDuck,\n  likePostDuck,\n  unlikePostDuck,\n  getMyFavoritePostsDuck,\n]\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import FadeIn from './FadeIn'\n\nexport default FadeIn\n","import React from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport './FadeIn.scss'\n\nconst FadeIn = (props) => (\n  <CSSTransitionGroup\n    className=\"react-transition-group-fade-in\"\n    transitionName=\"fade-in\"\n    transitionAppear={true}\n    transitionEnter={false}\n    transitionLeave={false}\n    transitionAppearTimeout={350}\n  >\n    {props.children}\n  </CSSTransitionGroup>\n);\n\nexport default FadeIn\n","import FadeOut from './FadeOut'\n\nexport default FadeOut\n","import React from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport './FadeOut.scss'\n\nconst FadeOut = (props) => (\n  <CSSTransitionGroup\n    className=\"react-transition-group-fade-out\"\n    transitionName=\"fade-out\"\n    transitionEnterTimeout={0}\n    transitionLeaveTimeout={350}\n  >\n    {props.children}\n  </CSSTransitionGroup>\n);\n\nexport default FadeOut\n","import React from \"react\";\nimport Img from 'react-image'\nimport { FadeIn } from 'components/Universal/Transitions'\n\nimport styles from './Image.module.css'\n\n/*\n\n*/\nclass Image extends React.Component {\n\n  render() {\n    const {\n      style,\n      className,\n      zoomOnHover,\n      ...other\n    } = this.props\n    return (\n      <Img\n        {...other}\n        container={children => {\n          return (\n            <div\n              className={[\n                styles.imgContainer,\n                zoomOnHover ? styles.zoomImgOnHover : '',\n                this.props.className || ''\n              ].join(' ')}\n              style={this.props.style}\n            >\n              {children.type === 'div' && (\n                // A bit of a hack, this 'div' value\n                // comes from the loader prop below\n                <div className={styles.loader}></div>\n              )}\n              {children.type === 'img' && (\n                <FadeIn>\n                  {children}\n                </FadeIn>\n              )}\n            </div>\n          )\n        }}\n        loader={<div></div>}\n      />\n    )\n  }\n}\n\nImage.defaultProps = {\n\n}\n\nexport default Image\n","import Image from './Image'\n\nexport default Image\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n} from 'store/api'\nimport Moment from 'react-moment'\nimport { Card, CardContent, CardActions, Button, Grid } from '@material-ui/core'\nimport EmptyHeartIcon from '@material-ui/icons/FavoriteBorder'\nimport HeartIcon from '@material-ui/icons/Favorite'\nimport Image from '../Image'\n\nimport styles from './PostCard.module.css'; // Import css modules stylesheet as styles\n\n\nclass PostCard extends Component {\n\n  render() {\n    const {post} = this.props\n    return (\n      <Card elevation={0} square>\n        {/*<CardMedia\n          style={{\n            height: 300,\n          }}\n          image={post.image}\n          title=\"Blog Post\"\n        />*/}\n        <Image className={styles.cardImage} zoomOnHover src={post.image}/>\n        <CardContent>\n          <Grid container>\n            <Grid item xs={6}>\n              <div className={styles.cardTitle}>\n                {post.title}\n              </div>\n              <br/>\n              <div className={styles.cardAuthor}>\n                {post.author && post.author.name}\n              </div>\n            </Grid>\n            <Grid item xs={6}>\n              <br/>\n              <br/>\n              <div className={styles.cardDate}>\n                <Moment fromNow ago>{post.timestamp}</Moment> ago\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <div className={styles.cardContentDivider}></div>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n          <div style={{flex: 1}}></div>\n          {this.props.liked && <HeartIcon className={styles.heartIcon} onClick={() => this.props.unlikePost(post.id)}/>}\n          {!this.props.liked && <EmptyHeartIcon className={styles.heartIcon} onClick={() => this.props.likePost(post.id)}/>}\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n  likePost: apiActions.likePost,\n  unlikePost: apiActions.unlikePost,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCard)\n","import PostCard from './PostCard'\n\nexport default PostCard\n","import { handleActions } from 'redux-actions'\nimport { actions as apiActions } from '../api'\n\n// Reducer namespace\nexport const namespace = `session`\n\nexport const actions = {\n\n}\n\n// Reducer\nlet initialState = null\n\nexport const reducer = handleActions(\n  {\n    [apiActions.logIn.FULFILLED]: (state, action) => {\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n      }\n    },\n    [apiActions.logOut.FULFILLED]: (state, action) => {\n      return null\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  getSession: (state) => (state[namespace]),\n}\n","import React from 'react'\nimport { Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { intersection } from 'lodash'\n\nconst LOGIN_PATH = '/login'\nconst FORBIDDEN_PATH = '/forbidden'\n\n// Example Usage:\n//\n// import { PrivateRoute } from 'components/App/Shared'\n//\n// <PrivateRoute\n//   path=\"/admin\"\n//   permittedRoles={[rolesEnum.Admin]}\n//   component={AdminPage}\n// />\nclass PrivateRoute extends React.Component {\n\n  render () {\n    let {\n      component: Component,\n      user,\n      permittedRoles,\n      location,\n      ...other\n    } = this.props\n\n    return (\n      <Route\n        {...other}\n        render={(props) => {\n            if (user == null) {\n              return <Redirect to={{pathname: LOGIN_PATH, state: {from: location}}} />\n            } else if (intersection(permittedRoles, user.roles).length === 0 ) {\n              return <Redirect to={{pathname: FORBIDDEN_PATH, state: {from: location}}} />\n            }\n            return <Component {...props} />\n          }\n        }\n      />\n    )\n  }\n}\n\nPrivateRoute.defaultProps = {\n  permittedRoles: [],\n  user: null,\n}\n\nconst mapStateToProps = (state) => {\n  const session = sessionSelectors.getSession(state)\n  return {\n    user: session ? session.user : null\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PrivateRoute))\n","import PrivateRoute from './PrivateRoute'\n\nexport default PrivateRoute\n","import React from \"react\";\n\n/*\n  This component is designed to provide consistent loading experiences.\n  A big problem with spinners is that short loading times leads to flickering.\n  This component provides an adjusted boolean isReady which will not be true\n  until the minTime has elapsed.\n */\nclass Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minTimeElapsed: true\n    };\n  }\n\n  clear() {\n    return new Promise(resolve => {\n      clearTimeout(this.minTimeTimeout);\n      this.setState(\n        {\n          minTimeElapsed: false\n        },\n        resolve\n      );\n    });\n  }\n\n  start() {\n    this.clear().then(() => {\n      this.minTimeTimeout = setTimeout(() => {\n        if (!this._ismounted) {\n          return\n        }\n        this.setState({\n          minTimeElapsed: true\n        });\n      }, this.props.minTime);\n    });\n  }\n\n  componentDidMount() {\n    this._ismounted = true\n    if (this.props.loading === true) {\n      this.start();\n    }\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.loading !== this.props.loading) {\n      if (this.props.loading === true) {\n        this.start();\n      }\n    }\n  }\n\n  render() {\n    let isReady = this.state.minTimeElapsed && !this.props.loading;\n    return this.props.children(isReady);\n  }\n}\n\nLoading.defaultProps = {\n  loading: false,\n  minTime: 500\n}\n\nexport default Loading\n","import Loading from './Loading'\n\nexport default Loading\n","import React from \"react\";\nimport Button from '@material-ui/core/Button'\n\n\n/*\n  This is a nifty component that allows you to build promise buttons.\n  It's a standard material ui Button that expects a promise to be returned\n  from the onClick handler. It provide render props to show different button\n  content during the different promise states. It also allows you to short-circuit\n  the button during the different promise states.\n\n  Example Usage:\n\n  class PromiseButton extends React.Component {\n\n    render() {\n      const {\n        children,\n        ...other\n      } = this.props\n      return (\n          <PromiseButtonBase\n            {...other}\n            renderOnPending={() => (\n              <PulseLoader size={6} margin=\"4px\"/>\n            )}\n            renderOnFulfilled={() => children}\n            renderOnRejected={() => children}\n          >\n            {children}\n          </PromiseButtonBase>\n      )\n    }\n  }\n*/\nclass PromiseButtonBase extends React.Component {\n\n  state = {\n    promiseState: 'before'\n  }\n\n  componentWillUnmount() {\n    delete this.currentPromise\n  }\n\n  onClick = (e) => {\n    if (this.state.promiseState === 'pending' && this.props.disableOnPending) {\n      return\n    }\n    if (this.state.promiseState === 'fulfilled' && this.props.disableOnFulfilled) {\n      return\n    }\n    if (this.state.promiseState === 'rejected' && this.props.disableOnRejected) {\n      return\n    }\n    let promise = this.props.onClick(e)\n    this.currentPromise = promise\n    if (!promise || !typeof promise.then === 'function') {\n      return //not a promise\n    }\n    this.setState({\n      promiseState: 'pending'\n    })\n    promise\n      .then(() => {\n        if (promise !== this.currentPromise) {\n          return //promise has changed\n        }\n        this.setState({\n          promiseState: 'fulfilled'\n        })\n      })\n      .catch(() => {\n        if (promise !== this.currentPromise) {\n          return //promise has changed\n        }\n        this.setState({\n          promiseState: 'rejected'\n        })\n      })\n  }\n\n  render() {\n    const {\n      renderOnPending,\n      renderOnFulfilled,\n      renderOnRejected,\n      disableOnPending,\n      disableOnFulfilled,\n      disableOnRejected,\n      ...other\n    } = this.props\n    return (\n      <Button {...other} onClick={this.onClick}>\n        {this.state.promiseState === 'before' && this.props.children}\n        {this.state.promiseState === 'pending' && this.props.renderOnPending()}\n        {this.state.promiseState === 'fulfilled' && this.props.renderOnFulfilled()}\n        {this.state.promiseState === 'rejected' && this.props.renderOnRejected()}\n      </Button>\n    )\n  }\n}\n\nPromiseButtonBase.defaultProps = {\n  renderOnPending: () => {},\n  renderOnFulfilled: () => {},\n  renderOnRejected: () => {},\n  disableOnPending: true,\n  disableOnFulfilled: false,\n  disableOnRejected: false,\n}\n\nexport default PromiseButtonBase\n","import PromiseButtonBase from './PromiseButtonBase'\n\nexport default PromiseButtonBase\n","import React from 'react';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport blue from '@material-ui/core/colors/blue';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nimport isEqual from 'lodash/isEqual'\nimport { FadeOut } from '../Transitions'\n\nconst variants = ['success','warning', 'error', 'info']\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: blue[600],\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\n\n\n/*\n  This is a nifty component that allows you to build promise buttons.\n  It's a standard material ui Button that expects a promise to be returned\n  from the onClick handler. It provide render props to show different button\n  content during the different promise states. It also allows you to short-circuit\n  the button during the different promise states.\n\n  Example Usage:\n\n  state = {\n    notification: {\n      type: 'success',\n      message: 'Form submitted!'\n    }\n  }\n\n  <Notification\n    onClose={this.removeNotification}\n    notification={this.state.notification}\n  />\n\n*/\nclass Notification extends React.Component {\n\n  componentDidMount() {\n    this.startTimer()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(this.props.notification, prevProps.notification)\n    ) {\n      this.startTimer()\n    }\n  }\n\n  startTimer() {\n    if (!this.props.notification) {\n      return\n    }\n    clearTimeout(this.timeout)\n    let { duration } = this.props.notification\n    this.timeout = setTimeout(\n      () => {\n        this.props.onClose()\n      },\n      Number.isInteger(duration) ? duration : 4000\n    )\n  }\n\n  onClose = (e) => {\n    clearTimeout(this.timeout)\n    this.props.onClose(e)\n  }\n\n  render() {\n    const {\n      notification,\n      className,\n      classes,\n      ...other\n    } = this.props\n\n    let variant = notification && variants.includes(notification.type) ? notification.type : 'info'\n\n    const Icon = variantIcon[variant];\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={notification != null}\n        transitionDuration={300}\n      >\n        <SnackbarContent\n          className={classNames(classes[variant], classes.content, className)}\n          aria-describedby=\"client-snackbar\"\n          message={\n              <FadeOut>\n                {notification && (\n                  <div className={classes.message}>\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    <span>{notification.message}</span>\n                  </div>\n                )}\n              </FadeOut>\n          }\n          action={\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          }\n          {...other}\n        />\n      </Snackbar>\n    )\n  }\n}\n\nNotification.defaultProps = {\n  notification: null,\n  onClose: () => {},\n}\n\nexport default withStyles(styles)(Notification)\n","import Notification from './Notification'\n\nexport default Notification\n","import PromiseButton from './PromiseButton'\n\nexport default PromiseButton\n","import React from \"react\";\nimport { PromiseButtonBase } from 'components/Universal'\nimport { PulseLoader } from 'react-spinners'\n\n/*\n  This component is in App/Shared as opposed to Universal because\n  it depends on react-spinners and because it is aware of the app's\n  primary color.\n*/\n\nclass PromiseButton extends React.Component {\n\n  render() {\n    const {\n      children,\n      ...other\n    } = this.props\n    return (\n        <PromiseButtonBase\n          {...other}\n          renderOnPending={() => (\n            <PulseLoader color=\"#FF6663\" size={6} margin=\"4px\"/>\n          )}\n          renderOnFulfilled={() => children}\n          renderOnRejected={() => children}\n        >\n          {children}\n        </PromiseButtonBase>\n    )\n  }\n}\n\nexport default PromiseButton\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    cursor: 'pointer',\n  },\n  fitParent: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    boxSizing: 'border-box'\n  },\n  darkTone: {\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,0.05)'\n    }\n  },\n  lightTone: {\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.05)'\n    }\n  },\n  overlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    transition: 'background-color .25s'\n  }\n}\n\nclass FlatButton extends Component {\n  render () {\n    const { classes, hoverTone, className, ...other } = this.props\n    let hoverClass = ''\n    if (hoverTone === 'light') {\n      hoverClass = classes.lightTone    }\n    else if (hoverTone === 'dark') {\n      hoverClass = classes.darkTone\n    }\n    return (\n      <div\n        className={[classes.root, className].join(' ')}\n        role=\"button\"\n        {...other}\n      >\n        <div className={classes.fitParent}>\n          <div className={[classes.overlay, hoverClass].join(' ')}></div>\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nFlatButton.defaultProps = {\n  onClick: () => {}\n}\n\nexport default withStyles(styles)(FlatButton)\n","import FlatButton from './FlatButton'\n\nexport default FlatButton\n","import { handleActions, createAction } from 'redux-actions'\n\n// Reducer namespace\nexport const namespace = `notifications`\n\nexport const actions = {\n  showNotification: createAction('SHOW_NOTIFICATION'),\n  hideNotification: createAction('HIDE_NOTIFICATION')\n}\n\n// Reducer\nlet initialState = []\n\nexport const reducer = handleActions(\n  {\n    [actions.showNotification]: (state, action) => {\n      return [...state, action.payload]\n    },\n    [actions.hideNotification]: (state, action) => {\n      return state.filter(notification => notification !== action.payload)\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  getMostRecent: (state) => (state[namespace][state[namespace].length - 1]),\n}\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Notification } from 'components/Universal'\nimport { actions as notificationActions, selectors as notificationSelectors } from 'store/other/notifications'\n\n\nclass Notifications extends React.Component {\n\n  hideNotification = () => {\n    this.props.hideNotification(this.props.notification)\n  }\n\n  render() {\n    return (\n      <Notification notification={this.props.notification} onClose={this.hideNotification} />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: notificationSelectors.getMostRecent(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  hideNotification: notificationActions.hideNotification,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notifications)\n","import Notifications from './Notifications'\n\nexport default Notifications\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { TextField } from '@material-ui/core'\nimport { PromiseButton } from 'components/App/Shared'\nimport { FadeIn } from 'components/Universal/Transitions'\nimport { actions as notificationActions } from 'store/other/notifications'\n\nimport styles from './LoginPage.module.css'\n\nclass LoginPage extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n\n  componentDidMount() {\n    this.props.showNotification({\n      type: 'info',\n      message: 'Hint: Because this web app is only a demo, you may log in with any credentials.',\n      duration: 5000\n    })\n  }\n\n  onInputChange = (key, value) => {\n    this.setState({\n      [key]: value\n    })\n  }\n\n  logIn = () => {\n    return this.props.logIn(\n      this.state.email,\n      this.state.password\n    ).then(() => {\n      this.props.history.push('/')\n    })\n  }\n\n  render() {\n    return (\n      <FadeIn>\n        <div className={styles.root}>\n          <form className={styles.loginForm}>\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              margin=\"normal\"\n              onChange={(e) => this.onInputChange('email', e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              margin=\"normal\"\n              onChange={(e) => this.onInputChange('password', e.target.password)}\n            />\n            <PromiseButton color=\"primary\" onClick={this.logIn}>Log In</PromiseButton>\n          </form>\n        </div>\n      </FadeIn>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  logIn: apiActions.logIn,\n  showNotification: notificationActions.showNotification,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport classNames from 'classnames'\nimport queryString from 'query-string'\nimport { Grid } from '@material-ui/core'\nimport { Loading } from 'components/Universal'\nimport { FlatButton, PostCard } from 'components/App/Shared'\nimport range from 'lodash/range'\nimport { BounceLoader } from 'react-spinners'\nimport { FadeIn } from 'components/Universal/Transitions'\nimport styles from './PostListPage.module.css'\n\nclass PostListPage extends Component {\n\n  componentDidMount() {\n    this.getPosts()\n  }\n\n  getPosts = () => {\n    this.props.getPosts(\n      this.getQueryParams(this.props)\n    )\n  }\n\n  componentDidUpdate(prevProps) {\n    let prev = this.getQueryParams(prevProps)\n    let curr = this.getQueryParams(this.props)\n    if (\n      prev.page !== curr.page ||\n      prev.perPage !== curr.perPage\n    ) {\n      this.getPosts()\n    }\n  }\n\n  getQueryParams = (props) => {\n    // Provide defaults if query params don't exist\n    let {\n      page = 0,\n      perPage = 6,\n      ...other\n    } = queryString.parse(props.location.search)\n    return {\n      page: Number(page),\n      perPage: Number(perPage),\n      ...other\n    }\n  }\n\n  setPage = (page) => {\n    let queryParams = this.getQueryParams(this.props)\n    queryParams.page = page\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: queryString.stringify(queryParams),\n    })\n  }\n\n  render() {\n    let pageLoading = this.props.getPostsPending || this.props.postsPage.posts == null\n    return (\n      <Loading loading={pageLoading} minTime={1000}>\n        {ready => {\n          if (!ready) {\n            return (\n              <div className={styles.pageLoading}>\n                <BounceLoader />\n              </div>\n            )\n          }\n          return (\n            <FadeIn>\n              <Grid container className={styles.pageContainer}>\n                  {this.props.postsPage.posts.map((post) => (\n                    <Grid\n                      key={post.id}\n                      className={styles.gridItem}\n                      item\n                      xs={12}\n                      sm={6}\n                      lg={4}\n                    >\n                      <PostCard post={post} liked={post.likes.includes(this.props.session.user.id)}/>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12}>\n                    <div className={styles.pagination}>\n                      {range(this.props.postsPage.numPages).map((i) => (\n                        <FlatButton\n                          key={i}\n                          onClick={() => this.setPage(i)}\n                          className={classNames(\n                            styles.paginationButton,\n                            i === this.props.postsPage.page ? styles.paginationButtonActive : ''\n                          )}\n                        >\n                          {i + 1}\n                        </FlatButton>\n                      ))}\n                    </div>\n                  </Grid>\n              </Grid>\n            </FadeIn>\n          )\n        }}\n      </Loading>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    postsPage: apiSelectors.getPostsData(state),\n    getPostsPending: apiSelectors.getPostsPending(state),\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  getPosts: apiActions.getPosts,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostListPage)\n","import React, { Component } from 'react'\n\nimport styles from './AdminPage.module.css'\n\nclass AdminPage extends Component {\n\n  render() {\n    return (\n      <div className={styles.pageContainer}>\n        <span>AdminPage</span>\n      </div>\n    )\n  }\n}\n\nexport default AdminPage\n","import { makeEnum } from 'utils/other'\n\nexport const rolesEnum = makeEnum(['Author', 'Admin'])\n\nexport const entitiesEnum = makeEnum(['Post', 'User'])\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { withRouter } from 'react-router-dom'\nimport { isAuthenticated } from 'utils/authUtils'\nimport { FlatButton } from 'components/App/Shared'\n\nimport styles from './Toolbar.module.css';\n\n\nclass Toolbar extends Component {\n\n  logOut = () => {\n    this.props.logOut()\n      .then(() => {\n        this.props.history.push('/login')\n      })\n  }\n\n  goTo = (path) => {\n    this.props.history.push(path)\n  }\n\n  render() {\n    const isAuthed = isAuthenticated(this.props.session)\n    return (\n      <div className={styles.Toolbar}>\n        <FlatButton\n          className={styles.toolbarButton}\n          onClick={() => this.goTo('/')}\n        >\n          Sample App\n        </FlatButton>\n        {isAuthed && (\n          <div className={styles.right}>\n            <FlatButton\n              hoverTone=\"dark\"\n              className={styles.toolbarButton}\n              onClick={() => this.goTo('/favorites')}\n            >\n              Favorites\n            </FlatButton>\n            <FlatButton\n              hoverTone=\"dark\"\n              className={styles.toolbarButton}\n              onClick={this.logOut}\n            >\n              Log Out\n            </FlatButton>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  logOut: apiActions.logOut,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Toolbar))\n","import { rolesEnum } from 'enums'\n\nexport const isAuthenticated = (session) => {\n  return session != null\n}\n\nexport const isAuthor = (user) => {\n  return user.roles.includes(rolesEnum.Author)\n}\n\nexport const isAdmin = (user) => {\n  return user.roles.includes(rolesEnum.Admin)\n}\n","import React, { Component } from 'react'\n\nimport styles from './Forbidden.module.css'\n\nclass Forbidden extends Component {\n\n  render() {\n    return (\n      <div className={styles.pageContainer}>\n        <span>Forbidden</span>\n      </div>\n    )\n  }\n}\n\nexport default Forbidden\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport {selectors as dbSelectors} from 'store/db'\nimport { selectors as querySelectors } from 'store/queries'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Grid } from '@material-ui/core'\nimport { Loading } from 'components/Universal'\nimport { FadeIn } from 'components/Universal/Transitions'\nimport { PostCard } from 'components/App/Shared'\nimport { BounceLoader } from 'react-spinners'\n\nimport styles from './FavoritePostsPage.module.css'\n\nclass FavoritePostsPage extends Component {\n\n  componentDidMount() {\n    this.props.getMyFavoritePosts()\n  }\n\n  render() {\n    let pageLoading = this.props.getMyFavoritePostsPending || this.props.posts == null\n    return (\n      <Loading loading={pageLoading} minTime={1000}>\n        {ready => {\n          if (!ready) {\n            return (\n              <div className={styles.pageLoading}>\n                <BounceLoader />\n              </div>\n            )\n          }\n          if (this.props.posts.length === 0) {\n            return (\n              <FadeIn>\n                <div className={styles.noPostsToShow}>\n                  <span>You have not favorited any posts.</span>\n                </div>\n              </FadeIn>\n            )\n          }\n          return (\n            <FadeIn>\n              <Grid container className={styles.pageContainer}>\n                  {this.props.posts.map((post) => (\n                    <Grid\n                      key={post.id}\n                      className={styles.gridItem}\n                      item\n                      xs={12}\n                      sm={6}\n                      lg={4}\n                    >\n                      <PostCard post={post} liked={post.likes.includes(this.props.session.user.id)}/>\n                    </Grid>\n                  ))}\n              </Grid>\n            </FadeIn>\n          )\n        }}\n      </Loading>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  let postIdsSelector = querySelectors.createIdsSelector('Post', 'my-favorites')\n  let ids = postIdsSelector(state)\n  let postsSelector = dbSelectors.createEntitySelector('Post', ids)\n  return {\n    posts: postsSelector(state),\n    getMyFavoritePostsPending: apiSelectors.getMyFavoritePostsPending(state),\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  getMyFavoritePosts: apiActions.getMyFavoritePosts,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FavoritePostsPage)\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      `'Josefin Sans'`,\n      `sans-serif`\n    ].join(',')\n  },\n  palette: {\n    primary: {\n      main: '#FF6663',\n    },\n    secondary: {\n      main: '#edf1f0',\n    },\n  },\n})\n\nexport default theme\n","import App from './App'\n\nexport default App\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { PrivateRoute, Notifications } from 'components/App/Shared'\nimport { LoginPage, PostListPage, FavoritePostsPage, AdminPage, Forbidden, Toolbar } from './Views'\nimport { rolesEnum } from 'enums'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\n\nimport styles from './App.module.css'; // Import css modules stylesheet as styles\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className={styles.app}>\n          <Toolbar />\n          <div className={styles.body}>\n            <Notifications />\n            <Route\n              exact\n              path=\"/login\"\n              component={LoginPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin, rolesEnum.Author]}\n              exact\n              path=\"/\"\n              component={PostListPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin, rolesEnum.Author]}\n              exact\n              path=\"/favorites\"\n              component={FavoritePostsPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin]}\n              exact\n              path=\"/admin\"\n              component={AdminPage}\n            />\n            <Route\n              exact\n              path=\"/forbidden\"\n              component={Forbidden}\n            />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as sessionDuck from './session'\nimport * as notificationsDuck from './notifications'\n\n/*\n*  The api module maintains async action info such as promise\n*  state, data, and errors. Api results can also be used to query\n*  the db module in cases where it makes sense.\n*/\n\nlet ducks = [\n  sessionDuck,\n  notificationsDuck,\n]\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport { reducers as queryReducers } from './queries'\nimport { reducers as apiReducers } from './api'\nimport { reducer as dbReducer } from './db'\nimport {\n  reducers as otherReducers,\n} from './other'\nimport {\n  selectors as sessionSelectors,\n  namespace as sessionNamespace\n} from './other/session'\nimport { loadState, saveState } from './localStorage'\nimport throttle from 'lodash/throttle'\n\nconst middleware = [ thunk, promiseMiddleware() ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst rootReducer = combineReducers({\n  ...apiReducers,\n  ...queryReducers,\n  ...otherReducers,\n  entities: dbReducer\n})\n\nconst initStore = () => {\n  const persistedState = loadState()\n\n  let store = createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(...middleware)\n  )\n\n  store.subscribe(throttle(() => {\n    let state = store.getState()\n    saveState({\n      [sessionNamespace]: sessionSelectors.getSession(state),\n    })\n  }, 1000))\n\n  return store\n}\n\nexport default initStore\n","import initStore from './initStore'\n\nexport default initStore()\n","\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from 'store'\nimport { HashRouter } from 'react-router-dom'\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoading\":\"FavoritePostsPage_pageLoading__1lRBj fit-viewport-body children-center\",\"pageContainer\":\"FavoritePostsPage_pageContainer__2OReS\",\"gridItem\":\"FavoritePostsPage_gridItem__3nvc8\",\"noPostsToShow\":\"FavoritePostsPage_noPostsToShow__3ljaH fit-viewport-body children-center\"};"],"sourceRoot":""}