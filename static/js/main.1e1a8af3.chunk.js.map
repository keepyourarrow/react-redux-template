{"version":3,"sources":["components/App/Views/LoginPage/LoginPage.module.css","components/App/App.module.css","components/App/Shared/PostCard/PostCard.module.css","services/utils/utils.js","services/utils/index.js","services/mockApiClient/mockApiClient.js","services/mockApiClient/index.js","store/db/schemas.js","store/db/selectors.js","store/db/actions.js","store/db/reducer.js","store/queries/queries.js","store/queries/index.js","store/api/getPosts.js","store/api/getMyFavoritePosts.js","store/api/logIn.js","store/api/logOut.js","store/api/likePost.js","store/api/unlikePost.js","store/api/index.js","store/other/session.js","components/App/Shared/Image/Image.js","components/App/Shared/Image/index.js","components/App/Shared/PostCard/PostCard.js","components/App/Shared/PostCard/index.js","components/App/Shared/PrivateRoute/PrivateRoute.js","components/App/Shared/PrivateRoute/index.js","components/Universal/Loading/Loading.js","components/Universal/Loading/index.js","components/Universal/PromiseButtonBase/PromiseButtonBase.js","components/Universal/PromiseButtonBase/index.js","components/App/Shared/PromiseButton/index.js","components/App/Shared/PromiseButton/PromiseButton.js","components/App/Shared/FlatButton/FlatButton.js","components/App/Shared/FlatButton/index.js","components/App/Views/LoginPage/LoginPage.js","components/App/Views/PostListPage/PostListPage.js","components/App/Views/AdminPage/AdminPage.js","utils/other.js","enums/enums.js","components/App/Views/Toolbar/Toolbar.js","utils/authUtils.js","components/App/Views/Forbidden/Forbidden.js","components/App/Views/FavoritePostsPage/FavoritePostsPage.js","components/App/theme.js","components/App/index.js","components/App/App.js","serviceWorker.js","store/other/index.js","store/initStore.js","store/index.js","store/localStorage.js","index.js","components/App/Views/PostListPage/PostListPage.module.css","components/App/Views/Toolbar/Toolbar.module.css","components/App/Shared/Image/Image.module.css","components/App/Views/FavoritePostsPage/FavoritePostsPage.module.css"],"names":["module","exports","root","loginForm","app","body","cardTitle","cardImage","cardAuthor","cardDate","cardContentDivider","heartIcon","timeout","ms","Promise","resolve","setTimeout","utils","posts","slice","loggedInUser","users","mockApiClient","MockApiClient","token","Object","classCallCheck","this","headers","setToken","concat","email","password","TIMEOUT_MS","user","page","perPage","numPages","Math","ceil","length","filter","post","likes","includes","id","find","p","Authorization","window","localStorage","getItem","UserSchema","schema","Entity","idAttribute","PostSchema","author","getEntities","state","entities","createEntitySelector","entityName","ids","values","schemas","key","Error","createSelector","denormalize","updateEntities","createAction","reducer","handleActions","defineProperty","dbActions","action","mergeWith","payload","objValue","srcValue","isArray","Post","User","queries","tags","namespace","actions","addIds","setIds","removeIds","validatePayload","valid","message","Array","queryEntity","entity","tag","_handleActions","validation","_action$payload","objectSpread","toConsumableArray","_action$payload2","_action$payload3","my-favorites","getQueries","selectors","createIdsSelector","ducks","queriesDuck","reducers","reduce","reducerMap","duck","actionsMap","selectorsMap","responseSchema","options","dispatch","type","getPosts","then","data","normalizedData","normalize","result","PENDING","FULFILLED","REJECTED","getPosts_handleActions","pending","fulfilled","rejected","error","_selectors","dbSelectors","getMyFavoritePosts","queryActions","getMyFavoritePosts_handleActions","getMyFavoritePosts_selectors","logIn","session","value","logIn_handleActions","logIn_selectors","logOut","logOut_handleActions","logOut_selectors","postId","likePost","likePost_handleActions","likePost_selectors","unlikePost","unlikePost_handleActions","unlikePost_selectors","getPostsDuck","logInDuck","logOutDuck","likePostDuck","unlikePostDuck","getMyFavoritePostsDuck","session_handleActions","apiActions","getSession","Image","_this","_this$props","props","zoomOnHover","style","className","other","objectWithoutProperties","react_default","a","createElement","es_default","assign","container","children","styles","imgContainer","zoomImgOnHover","join","loader","imgFadeIn","React","Component","defaultProps","PostCard","index_es","elevation","square","Shared_Image","src","image","item","xs","title","name","dist_default","fromNow","ago","timestamp","size","color","flex","liked","Favorite_default","onClick","FavoriteBorder_default","mapDispatchToProps","connect","PrivateRoute","component","permittedRoles","location","Route","render","Redirect","to","pathname","from","intersection","roles","sessionSelectors","withRouter","Loading","possibleConstructorReturn","getPrototypeOf","call","minTimeElapsed","_this2","clearTimeout","minTimeTimeout","setState","_this3","clear","_ismounted","minTime","loading","start","prevProps","prevState","isReady","PromiseButtonBase","promiseState","e","disableOnPending","disableOnFulfilled","disableOnRejected","promise","currentPromise","catch","renderOnPending","renderOnFulfilled","renderOnRejected","Button_default","PromiseButton","Universal_PromiseButtonBase","react_spinners","margin","FlatButton","classes","hoverTone","hoverClass","lightTone","darkTone","role","fitParent","overlay","withStyles","cursor","height","width","position","display","alignItems","justifyContent","padding","boxSizing","&:hover","backgroundColor","left","right","top","bottom","transition","LoginPage","onInputChange","history","push","label","onChange","target","Shared_PromiseButton","PostListPage","getQueryParams","_queryString$parse","queryString","parse","search","_queryString$parse$pa","_queryString$parse$pe","Number","setPage","queryParams","stringify","prev","curr","pageLoading","getPostsPending","postsPage","Universal_Loading","ready","pageContainer","map","sm","lg","Shared_PostCard","pagination","range","i","Shared_FlatButton","paginationButton","paginationButtonActive","apiSelectors","getPostsData","AdminPage","makeEnum","array","enumObj","forEach","freeze","Proxy","get","prop","receiver","undefined","Reflect","apply","arguments","rolesEnum","Toolbar","goTo","path","isAuthed","toolbarButton","Forbidden","FavoritePostsPage","getMyFavoritePostsPending","noPostsToShow","querySelectors","postIdsSelector","postsSelector","theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","App","Views_Toolbar_Toolbar","exact","Shared_PrivateRoute","Admin","Author","Boolean","hostname","match","sessionDuck","middleware","thunk","promiseMiddleware","rootReducer","combineReducers","apiReducers","queryReducers","otherReducers","dbReducer","initStore","persistedState","serializedState","JSON","err","loadState","store","createStore","applyMiddleware","subscribe","throttle","getState","setItem","_unused","saveState","sessionNamespace","ReactDOM","es","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1e1a8af3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoginPage_root__DGr1I fit-viewport-body children-center\",\"loginForm\":\"LoginPage_loginForm__18JQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__htTSY\",\"body\":\"App_body__3xZH0 appBackgroundColor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardTitle\":\"PostCard_cardTitle__18_kx text-truncate text-md\",\"cardImage\":\"PostCard_cardImage__2FZb6\",\"cardAuthor\":\"PostCard_cardAuthor__2P-rN text-truncate text-sm text-grey-6\",\"cardDate\":\"PostCard_cardDate__1MSpc text-truncate text-sm text-grey-6\",\"cardContentDivider\":\"PostCard_cardContentDivider__3xjk- border-bottom\",\"heartIcon\":\"PostCard_heartIcon__2Uj8D textPrimary\"};","export const timeout = (ms) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","import * as utils from './utils'\n\nexport default utils\n","import utils from 'services/utils'\nimport users from './users.json'\nimport allPosts from './posts.json'\nlet posts = allPosts.slice(0, 10)\n\nconst TIMEOUT_MS = 100\nconst token = '12345'\nconst loggedInUser = users[0]\n\nclass MockApiClient {\n\n  constructor (token) {\n    this.headers = {}\n    if (token) {\n      this.setToken(token)\n    }\n  }\n\n  setToken (token) {\n    this.token = token\n    this.headers['Authorization'] = `Bearer ${token.token}`\n  }\n\n  async logIn (email, password) {\n    await utils.timeout(TIMEOUT_MS * 5)\n    this.setToken(token)\n    return {\n      token,\n      user: loggedInUser\n    }\n  }\n\n  async getPosts ({page = 0, perPage = 6} = {}) {\n    await utils.timeout(TIMEOUT_MS)\n    return {\n      page,\n      perPage,\n      numPages: Math.ceil(posts.length / perPage),\n      posts: posts.slice(page * perPage, page * perPage + perPage)\n    }\n  }\n\n  async getMyFavoritePosts() {\n    await utils.timeout(TIMEOUT_MS)\n    return posts.filter(post => post.likes.includes(loggedInUser.id))\n  }\n\n  async likePost (id) {\n    await utils.timeout(TIMEOUT_MS)\n    let post = posts.find((p) => p.id === id)\n    if (post) {\n      // Normally user would be inferred from auth token\n      post.likes = [loggedInUser.id]\n    }\n    return post\n  }\n\n  async unlikePost (id) {\n    await utils.timeout(TIMEOUT_MS)\n    let post = posts.find((p) => p.id === id)\n    if (post) {\n      post.likes = []\n    }\n    return post\n  }\n\n  async logOut () {\n    await utils.timeout(TIMEOUT_MS)\n    delete this.token\n    delete this.headers.Authorization\n  }\n\n}\n\n// Export Singleton\nconst mockApiClient = new MockApiClient(window.localStorage.getItem('token'))\n\nexport default mockApiClient\n","import mockApiClient from './mockApiClient'\n\nexport default mockApiClient\n","import { schema } from 'normalizr'\n\nexport const UserSchema = new schema.Entity(\n  'User',\n  {},\n  {\n    idAttribute: 'id'\n  }\n)\n\nexport const PostSchema = new schema.Entity(\n  'Post',\n  {\n    author: UserSchema\n  },\n  {\n    idAttribute: 'id'\n  }\n)\n","import * as schemas from './schemas'\nimport { denormalize } from 'normalizr'\nimport { createSelector } from 'reselect'\n\nexport const getEntities = state => state.entities\n\nexport const createEntitySelector = (entityName, ids) => {\n  let schema = Object.values(schemas).find(schema => schema.key === entityName)\n  if (!schema) {\n    throw new Error('The entityName provided does not exist!')\n  }\n  let selector = createSelector(\n      getEntities,\n      entities => {\n          return denormalize(ids, [schema], entities)\n      }\n  )\n  return selector\n}\n","import { createAction } from 'redux-actions'\n\nexport const updateEntities = createAction('UPDATE_ENTITIES')\n","import {mergeWith, isArray} from 'lodash'\nimport { handleActions } from 'redux-actions'\nimport * as dbActions from './actions'\n\nconst initialState = {\n  Post: {},\n  User: {},\n}\n\n// Reducer\nconst reducer = handleActions(\n  {\n    [dbActions.updateEntities]: (state, action) => {\n      return mergeWith({}, state, action.payload, function (objValue, srcValue) {\n        if (isArray(objValue)) {\n          return srcValue\n        }\n      })\n    },\n  },\n  initialState\n)\n\nexport default reducer\n","import { handleActions, createAction } from 'redux-actions'\nimport { createSelector } from 'reselect'\n\nlet queries = {\n  Post: {\n    tags: ['my-favorites']\n  }\n}\n\n// Reducer namespace\nexport const namespace = `queries`\n\nexport const actions = {\n  addIds: createAction('ADD_IDS'),\n  setIds: createAction('SET_IDS'),\n  removeIds: createAction('REMOVE_IDS'),\n}\n\nlet initialState = {\n  Post: {\n    'my-favorites': [],\n  }\n}\n\nconst validatePayload = (payload) => {\n  // Right now all actions take same payload so this works, may need\n  // to add more parameters to this if action contracts start differing\n  if (!payload) {\n    return {\n      valid: false,\n      message: 'Payload must contain entity, tag, and ids'\n    }\n  }\n  if (!payload.ids instanceof Array) {\n    return {\n      valid: false,\n      message: 'Ids must be an Array.'\n    }\n  }\n  let queryEntity = queries[payload.entity]\n  if (queryEntity == null || !queryEntity.tags.includes(payload.tag)) {\n    return {\n      valid: false,\n      message: 'Entity and/or tag does not exist.'\n    }\n  }\n  return {\n    valid: true,\n  }\n}\n\n// Reducer\nexport const reducer = handleActions(\n  {\n    [actions.addIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: [...state[entity][tag], ...ids]\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n    [actions.setIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: ids\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n    [actions.removeIds]: (state, action) => {\n      let validation = validatePayload(action.payload)\n      if (validation.valid) {\n        let {ids, entity, tag} = action.payload\n        return {\n          ...state,\n          [entity]: {\n            ...state[entity],\n            [tag]: state[entity][tag].filter(id => !ids.includes(id))\n          },\n        }\n      }\n      else {\n        throw new Error(validation.message)\n      }\n    },\n  },\n  initialState\n)\n\nconst getQueries = state => state[namespace]\n\nexport const selectors = {\n  createIdsSelector: (entity, tag) => {\n    let selector = createSelector(\n        getQueries,\n        queries => {\n            return queries[entity][tag]\n        }\n    )\n    return selector\n  },\n}\n","import * as queriesDuck from './queries'\n\nlet ducks = [\n  queriesDuck,\n]\n\n/*\n*  The queries module maintains what we should be fetching\n*  from the db module via the result feild of normalized data.\n*/\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport {\n  schemas,\n  actions as dbActions,\n  selectors as dbSelectors\n} from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize, denormalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'getPosts'\n\n// Reducer namespace\nexport const namespace = `api/GET_POSTS`\n\nconst responseSchema = {\n  posts: [schemas.PostSchema]\n}\n\n// Actions\nconst action = (options) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.getPosts(options)\n        .then(data => {\n          let normalizedData = normalize(data, responseSchema)\n          dispatch(\n            dbActions.updateEntities(normalizedData.entities)\n          )\n          return normalizedData.result\n        })\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => {\n    return denormalize(state[namespace].data, responseSchema, dbSelectors.getEntities(state))\n  },\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize, denormalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'getMyFavoritePosts'\n\n// Reducer namespace\nexport const namespace = `api/GET_MY_FAVORITE_POSTS`\n\n// Actions\nconst action = (options) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.getMyFavoritePosts()\n        .then(data => {\n          let normalizedData = normalize(data, [schemas.PostSchema])\n          dispatch(\n            dbActions.updateEntities(normalizedData.entities)\n          )\n          dispatch(\n            queryActions.setIds({\n              entity: 'Post',\n              tag: 'my-favorites',\n              ids: normalizedData.result\n            })\n          )\n          return normalizedData.result\n        })\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n\n// Action types\nconst ACTION_NAME = 'logIn'\n\n// Reducer namespace\nexport const namespace = `api/LOG_IN`\n\nconst responseSchema = {\n  user: schemas.UserSchema\n}\n\n// Actions\nconst action = (email, password) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.logIn(email, password)\n    })\n      .then(data => {\n        let session = data.value;\n        let normalizedData = normalize(session, responseSchema);\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n      })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n\n// Action types\nconst ACTION_NAME = 'logOut'\n\n// Reducer namespace\nexport const namespace = `api/LOG_OUT`\n\n\n// Actions\nconst action = (email, password) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.logOut(email, password)\n    })\n  }\n}\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'likePost'\n\n// Reducer namespace\nexport const namespace = `api/LIKE_POST`\n\n// Actions\nconst action = (postId) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.likePost(postId)\n    })\n      .then(data => {\n        let post = data.value\n        let normalizedData = normalize(post, schemas.PostSchema)\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n        // dispatch(\n        //   queryActions.addIds({entity: 'Post', tag: 'my-favorites', ids: [normalizedData.result]})\n        // )\n      })\n  }\n}\n\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\n\n// Action types\nconst ACTION_NAME = 'unlikePost'\n\n// Reducer namespace\nexport const namespace = `api/UNLIKE_POST`\n\n// Actions\nconst action = (postId) => {\n return dispatch => {\n    return dispatch({\n      type: namespace,\n      payload: mockApiClient.unlikePost(postId)\n    })\n      .then(data => {\n        let post = data.value\n        let normalizedData = normalize(post, schemas.PostSchema)\n        dispatch(\n          dbActions.updateEntities(normalizedData.entities)\n        )\n        dispatch(\n          queryActions.removeIds({\n            entity: 'Post',\n            tag: 'my-favorites',\n            ids: [postId]\n          })\n        )\n      })\n  }\n}\n\n\naction.PENDING = `${namespace}_PENDING`\naction.FULFILLED = `${namespace}_FULFILLED`\naction.REJECTED = `${namespace}_REJECTED`\n\nexport const actions = {\n  [ACTION_NAME]: action\n}\n\n\n// Reducer\nlet initialState = {\n  pending: false,\n  fulfilled: false,\n  rejected: false,\n  data: null,\n  error: null,\n}\n\nexport const reducer = handleActions(\n  {\n    [action.PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        fulfilled: false,\n        rejected: false,\n      }\n    },\n    [action.FULFILLED]: (state, action) => {\n      return {\n        ...state,\n        data: action.payload,\n        error: null,\n        pending: false,\n        fulfilled: true,\n      }\n    },\n    [action.REJECTED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n        rejected: true,\n      }\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  [`${ACTION_NAME}Data`]: (state) => (state[namespace].data),\n  [`${ACTION_NAME}Pending`]: (state) => (state[namespace].pending),\n  [`${ACTION_NAME}Fulfilled`]: (state) => (state[namespace].fulfilled),\n  [`${ACTION_NAME}Rejected`]: (state)  => (state[namespace].rejected),\n}\n","import * as getPostsDuck from './getPosts'\nimport * as getMyFavoritePostsDuck from './getMyFavoritePosts'\nimport * as logInDuck from './logIn'\nimport * as logOutDuck from './logOut'\nimport * as likePostDuck from './likePost'\nimport * as unlikePostDuck from './unlikePost'\n\n\n/*\n*  The api module maintains async action info such as promise\n*  state, data, and errors. Api results can also be used to query\n*  the db module in cases where it makes sense.\n*/\n\nlet ducks = [\n  getPostsDuck,\n  logInDuck,\n  logOutDuck,\n  likePostDuck,\n  unlikePostDuck,\n  getMyFavoritePostsDuck,\n]\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import { handleActions } from 'redux-actions'\nimport { createAsyncAction } from 'redux-promise-middleware-actions'\nimport mockApiClient from 'services/mockApiClient'\nimport { schemas, actions as dbActions } from '../db'\nimport { actions as queryActions } from '../queries'\nimport { normalize } from 'normalizr'\nimport { actions as apiActions } from '../api'\n\n// Reducer namespace\nexport const namespace = `session`\n\nexport const actions = {\n\n}\n\n// Reducer\nlet initialState = null\n\nexport const reducer = handleActions(\n  {\n    [apiActions.logIn.FULFILLED]: (state, action) => {\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n      }\n    },\n    [apiActions.logOut.FULFILLED]: (state, action) => {\n      return null\n    },\n  },\n  initialState\n)\n\n// Selectors\nexport const selectors = {\n  getSession: (state) => (state[namespace]),\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Img from 'react-image'\n\nimport styles from './Image.module.css'\n\n/*\n\n*/\nclass Image extends React.Component {\n\n  render() {\n    const {\n      style,\n      className,\n      zoomOnHover,\n      ...other\n    } = this.props\n    return (\n      <Img\n        {...other}\n        container={children => {\n          return (\n            <div\n              className={[\n                styles.imgContainer,\n                zoomOnHover ? styles.zoomImgOnHover : '',\n                this.props.className || ''\n              ].join(' ')}\n              style={this.props.style}\n            >\n              {children.type === 'div' && (\n                // A bit of a hack, this 'div' value\n                // comes from the loader prop below\n                <div className={styles.loader}></div>\n              )}\n              {children.type === 'img' && (\n                <div className={styles.imgFadeIn}>\n                  {children}\n                </div>\n              )}\n            </div>\n          )\n        }}\n        loader={<div></div>}\n      />\n    )\n  }\n}\n\nImage.defaultProps = {\n\n}\n\nexport default Image\n","import Image from './Image'\n\nexport default Image\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { Card, CardActionArea, CardContent, CardActions, CardMedia, Button, Grid } from '@material-ui/core'\nimport EmptyHeartIcon from '@material-ui/icons/FavoriteBorder'\nimport HeartIcon from '@material-ui/icons/Favorite'\nimport Image from '../Image'\n\nimport styles from './PostCard.module.css'; // Import css modules stylesheet as styles\n\n\nclass PostCard extends Component {\n\n  render() {\n    const {post} = this.props\n    return (\n      <Card elevation={0} square>\n        {/*<CardMedia\n          style={{\n            height: 300,\n          }}\n          image={post.image}\n          title=\"Blog Post\"\n        />*/}\n        <Image className={styles.cardImage} zoomOnHover src={post.image}/>\n        <CardContent>\n          <Grid container>\n            <Grid item xs={6}>\n              <div className={styles.cardTitle}>\n                {post.title}\n              </div>\n              <br/>\n              <div className={styles.cardAuthor}>\n                {post.author && post.author.name}\n              </div>\n            </Grid>\n            <Grid item xs={6}>\n              <br/>\n              <br/>\n              <div className={styles.cardDate}>\n                <Moment fromNow ago>{post.timestamp}</Moment> ago\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <div className={styles.cardContentDivider}></div>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n          <div style={{flex: 1}}></div>\n          {this.props.liked && <HeartIcon className={styles.heartIcon} onClick={() => this.props.unlikePost(post.id)}/>}\n          {!this.props.liked && <EmptyHeartIcon className={styles.heartIcon} onClick={() => this.props.likePost(post.id)}/>}\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n  likePost: apiActions.likePost,\n  unlikePost: apiActions.unlikePost,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCard)\n","import PostCard from './PostCard'\n\nexport default PostCard\n","import React from 'react'\nimport { Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { intersection } from 'lodash'\n\nconst LOGIN_PATH = '/login'\nconst FORBIDDEN_PATH = '/forbidden'\n\n// Example Usage:\n//\n// import { PrivateRoute } from 'components/App/Shared'\n//\n// <PrivateRoute\n//   path=\"/admin\"\n//   permittedRoles={[rolesEnum.Admin]}\n//   component={AdminPage}\n// />\nclass PrivateRoute extends React.Component {\n\n  render () {\n    let {\n      component: Component,\n      user,\n      permittedRoles,\n      location,\n      ...other\n    } = this.props\n\n    return (\n      <Route\n        {...other}\n        render={(props) => {\n            if (user == null) {\n              return <Redirect to={{pathname: LOGIN_PATH, state: {from: location}}} />\n            } else if (intersection(permittedRoles, user.roles).length === 0 ) {\n              return <Redirect to={{pathname: FORBIDDEN_PATH, state: {from: location}}} />\n            }\n            return <Component {...props} />\n          }\n        }\n      />\n    )\n  }\n}\n\nPrivateRoute.defaultProps = {\n  permittedRoles: [],\n  user: null,\n}\n\nconst mapStateToProps = (state) => {\n  const session = sessionSelectors.getSession(state)\n  return {\n    user: session ? session.user : null\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PrivateRoute))\n","import PrivateRoute from './PrivateRoute'\n\nexport default PrivateRoute\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n/*\n  This component is designed to provide consistent loading experiences.\n  A big problem with spinners is that short loading times leads to flickering.\n  This component provides an adjusted boolean isReady which will not be true\n  until the minTime has elapsed.\n */\nclass Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minTimeElapsed: true\n    };\n  }\n\n  clear() {\n    return new Promise(resolve => {\n      clearTimeout(this.minTimeTimeout);\n      this.setState(\n        {\n          minTimeElapsed: false\n        },\n        resolve\n      );\n    });\n  }\n\n  start() {\n    this.clear().then(() => {\n      this.minTimeTimeout = setTimeout(() => {\n        if (!this._ismounted) {\n          return\n        }\n        this.setState({\n          minTimeElapsed: true\n        });\n      }, this.props.minTime);\n    });\n  }\n\n  componentDidMount() {\n    this._ismounted = true\n    if (this.props.loading === true) {\n      this.start();\n    }\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.loading !== this.props.loading) {\n      if (this.props.loading === true) {\n        this.start();\n      }\n    }\n  }\n\n  render() {\n    let isReady = this.state.minTimeElapsed && !this.props.loading;\n    return this.props.children(isReady);\n  }\n}\n\nLoading.defaultProps = {\n  loading: false,\n  minTime: 500\n}\n\nexport default Loading\n","import Loading from './Loading'\n\nexport default Loading\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Button from '@material-ui/core/Button'\n\n\n/*\n  This is a nifty component that allows you to build promise buttons.\n  It's a standard material ui Button that expects a promise to be returned\n  from the onClick handler. It provide render props to show different button\n  content during the different promise states. It also allows you to short-circuit\n  the button during the different promise states.\n\n  Example Usage:\n\n  class PromiseButton extends React.Component {\n\n    render() {\n      const {\n        children,\n        ...other\n      } = this.props\n      return (\n          <PromiseButtonBase\n            {...other}\n            renderOnPending={() => (\n              <PulseLoader size={6} margin=\"4px\"/>\n            )}\n            renderOnFulfilled={() => children}\n            renderOnRejected={() => children}\n          >\n            {children}\n          </PromiseButtonBase>\n      )\n    }\n  }\n*/\nclass PromiseButtonBase extends React.Component {\n\n  state = {\n    promiseState: 'before'\n  }\n\n  componentWillUnmount() {\n    delete this.currentPromise\n  }\n\n  onClick = (e) => {\n    if (this.state.promiseState === 'pending' && this.props.disableOnPending) {\n      return\n    }\n    if (this.state.promiseState === 'fulfilled' && this.props.disableOnFulfilled) {\n      return\n    }\n    if (this.state.promiseState === 'rejected' && this.props.disableOnRejected) {\n      return\n    }\n    let promise = this.props.onClick(e)\n    this.currentPromise = promise\n    if (!promise || !typeof promise.then === 'function') {\n      return //not a promise\n    }\n    this.setState({\n      promiseState: 'pending'\n    })\n    promise\n      .then(() => {\n        if (promise !== this.currentPromise) {\n          return //promise has changed\n        }\n        this.setState({\n          promiseState: 'fulfilled'\n        })\n      })\n      .catch(() => {\n        if (promise !== this.currentPromise) {\n          return //promise has changed\n        }\n        this.setState({\n          promiseState: 'rejected'\n        })\n      })\n  }\n\n  render() {\n    const {\n      renderOnPending,\n      renderOnFulfilled,\n      renderOnRejected,\n      disableOnPending,\n      disableOnFulfilled,\n      disableOnRejected,\n      ...other\n    } = this.props\n    return (\n      <Button {...other} onClick={this.onClick}>\n        {this.state.promiseState === 'before' && this.props.children}\n        {this.state.promiseState === 'pending' && this.props.renderOnPending()}\n        {this.state.promiseState === 'fulfilled' && this.props.renderOnFulfilled()}\n        {this.state.promiseState === 'rejected' && this.props.renderOnRejected()}\n      </Button>\n    )\n  }\n}\n\nPromiseButtonBase.defaultProps = {\n  renderOnPending: () => {},\n  renderOnFulfilled: () => {},\n  renderOnRejected: () => {},\n  disableOnPending: true,\n  disableOnFulfilled: false,\n  disableOnRejected: false,\n}\n\nexport default PromiseButtonBase\n","import PromiseButtonBase from './PromiseButtonBase'\n\nexport default PromiseButtonBase\n","import PromiseButton from './PromiseButton'\n\nexport default PromiseButton\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PromiseButtonBase } from 'components/Universal'\nimport { PulseLoader } from 'react-spinners'\n\n/*\n  This component is in App/Shared as opposed to Universal because\n  it depends on react-spinners and because it is aware of the app's\n  primary color.\n*/\n\nclass PromiseButton extends React.Component {\n\n  render() {\n    const {\n      children,\n      ...other\n    } = this.props\n    return (\n        <PromiseButtonBase\n          {...other}\n          renderOnPending={() => (\n            <PulseLoader color=\"#FF6663\" size={6} margin=\"4px\"/>\n          )}\n          renderOnFulfilled={() => children}\n          renderOnRejected={() => children}\n        >\n          {children}\n        </PromiseButtonBase>\n    )\n  }\n}\n\nexport default PromiseButton\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    cursor: 'pointer',\n  },\n  fitParent: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    boxSizing: 'border-box'\n  },\n  darkTone: {\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,0.05)'\n    }\n  },\n  lightTone: {\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.05)'\n    }\n  },\n  overlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    transition: 'background-color .25s'\n  }\n}\n\nclass FlatButton extends Component {\n  render () {\n    const { classes, hoverTone, className, ...other } = this.props\n    let hoverClass = ''\n    if (hoverTone === 'light') {\n      hoverClass = classes.lightTone    }\n    else if (hoverTone === 'dark') {\n      hoverClass = classes.darkTone\n    }\n    return (\n      <div\n        className={[classes.root, className].join(' ')}\n        role=\"button\"\n        {...other}\n      >\n        <div className={classes.fitParent}>\n          <div className={[classes.overlay, hoverClass].join(' ')}></div>\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nFlatButton.defaultProps = {\n  onClick: () => {}\n}\n\nexport default withStyles(styles)(FlatButton)\n","import FlatButton from './FlatButton'\n\nexport default FlatButton\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Redirect } from 'react-router-dom'\nimport { TextField, Button } from '@material-ui/core'\nimport { PromiseButton } from 'components/App/Shared'\n\nimport styles from './LoginPage.module.css'\n\nclass LoginPage extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n\n  onInputChange = (key, value) => {\n    this.setState({\n      [key]: value\n    })\n  }\n\n  logIn = () => {\n    return this.props.logIn(\n      this.state.email,\n      this.state.password\n    ).then(() => {\n      this.props.history.push('/')\n    })\n  }\n\n  render() {\n    // if (this.props.session !== null) {\n    //   return <Redirect to=\"/\"/>\n    // }\n    return (\n      <div className={styles.root}>\n        <form className={styles.loginForm}>\n          <TextField\n            label=\"Email\"\n            type=\"email\"\n            margin=\"normal\"\n            onChange={(e) => this.onInputChange('email', e.target.value)}\n          />\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            margin=\"normal\"\n            onChange={(e) => this.onInputChange('password', e.target.password)}\n          />\n          <PromiseButton color=\"primary\" onClick={this.logIn}>Log In</PromiseButton>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  logIn: apiActions.logIn,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { selectors as querySelectors } from 'store/queries'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Redirect } from 'react-router-dom'\nimport queryString from 'query-string'\nimport { Grid } from '@material-ui/core'\nimport { Loading } from 'components/Universal'\nimport { FlatButton, PostCard } from 'components/App/Shared'\nimport range from 'lodash/range'\nimport { BounceLoader } from 'react-spinners'\n\nimport styles from './PostListPage.module.css'\n\nclass PostListPage extends Component {\n\n  componentDidMount() {\n    this.getPosts()\n  }\n\n  getPosts = () => {\n    this.props.getPosts(\n      this.getQueryParams(this.props)\n    )\n  }\n\n  componentDidUpdate(prevProps) {\n    let prev = this.getQueryParams(prevProps)\n    let curr = this.getQueryParams(this.props)\n    if (\n      prev.page !== curr.page ||\n      prev.perPage !== curr.perPage\n    ) {\n      this.getPosts()\n    }\n  }\n\n  getQueryParams = (props) => {\n    // Provide defaults if query params don't exist\n    let {\n      page = 0,\n      perPage = 6,\n      ...other\n    } = queryString.parse(props.location.search)\n    return {\n      page: Number(page),\n      perPage: Number(perPage),\n      ...other\n    }\n  }\n\n  setPage = (page) => {\n    let queryParams = this.getQueryParams(this.props)\n    queryParams.page = page\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: queryString.stringify(queryParams),\n    })\n  }\n\n  render() {\n    let pageLoading = this.props.getPostsPending || this.props.postsPage.posts == null\n    return (\n      <Loading loading={pageLoading} minTime={1000}>\n        {ready => {\n          if (!ready) {\n            return (\n              <div className={styles.pageLoading}>\n                <BounceLoader />\n              </div>\n            )\n          }\n          return (\n            <Grid container className={styles.pageContainer}>\n                {this.props.postsPage.posts.map((post) => (\n                  <Grid key={post.id} style={{padding: 24}} item xs={12} sm={6} lg={4}>\n                    <PostCard post={post} liked={post.likes.includes(this.props.session.user.id)}/>\n                  </Grid>\n                ))}\n                <Grid item xs={12}>\n                  <div className={styles.pagination}>\n                    {range(this.props.postsPage.numPages).map((i) => (\n                      <FlatButton\n                        key={i}\n                        onClick={() => this.setPage(i)}\n                        className={\n                          [\n                            styles.paginationButton,\n                            i === this.props.postsPage.page ? styles.paginationButtonActive : ''\n                          ].join(' ')\n                        }\n                      >\n                        {i + 1}\n                      </FlatButton>\n                    ))}\n                  </div>\n                </Grid>\n            </Grid>\n          )\n        }}\n      </Loading>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    postsPage: apiSelectors.getPostsData(state),\n    getPostsPending: apiSelectors.getPostsPending(state),\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  getPosts: apiActions.getPosts,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostListPage)\n","import React, { Component } from 'react'\n\nclass AdminPage extends Component {\n\n  render() {\n    return (\n      <div style={{height: 'calc(100vh - 64px)'}} >\n        <span>AdminPage</span>\n      </div>\n    )\n  }\n}\n\nexport default AdminPage\n","export const makeEnum = (array) => {\n    if (!array instanceof Array) {\n      throw new Error('First argument must be an array!')\n    }\n    let enumObj = {}\n    array.forEach((type) => {\n      enumObj[type] = type\n    })\n    enumObj = Object.freeze(enumObj)\n    return new Proxy(enumObj, {\n      get: function(target, prop, receiver) {\n          if (target[prop] === undefined) {\n            throw new Error(`Type ${prop} does not exist!`)\n          } else {\n            return Reflect.get(...arguments);\n          }\n        }\n    })\n}\n","import { makeEnum } from 'utils/other'\n\nexport const rolesEnum = new makeEnum(['Author', 'Admin'])\n\nexport const entitiesEnum = new makeEnum(['Post', 'User'])\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport { Grid, Button } from '@material-ui/core'\nimport { isAuthenticated } from 'utils/authUtils'\nimport { FlatButton } from 'components/App/Shared'\n\nimport styles from './Toolbar.module.css';\n\n\nclass Toolbar extends Component {\n\n  logOut = () => {\n    this.props.logOut()\n      .then(() => {\n        this.props.history.push('/login')\n      })\n  }\n\n  goTo = (path) => {\n    this.props.history.push(path)\n  }\n\n  render() {\n    const isAuthed = isAuthenticated(this.props.session)\n    return (\n      <div className={styles.Toolbar}>\n        <FlatButton\n          className={styles.toolbarButton}\n          onClick={() => this.goTo('/')}\n        >\n          Sample App\n        </FlatButton>\n        {isAuthed && (\n          <div className={styles.right}>\n            <FlatButton\n              hoverTone=\"dark\"\n              className={styles.toolbarButton}\n              onClick={() => this.goTo('/favorites')}\n            >\n              Favorites\n            </FlatButton>\n            <FlatButton\n              hoverTone=\"dark\"\n              className={styles.toolbarButton}\n              onClick={this.logOut}\n            >\n              Log Out\n            </FlatButton>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  logOut: apiActions.logOut,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Toolbar))\n","import { rolesEnum } from 'enums'\n\nexport const isAuthenticated = (session) => {\n  return session != null\n}\n\nexport const isAuthor = (user) => {\n  return user.roles.includes(rolesEnum.Author)\n}\n\nexport const isAdmin = (user) => {\n  return user.roles.includes(rolesEnum.Admin)\n}\n","import React, { Component } from 'react'\n\nclass Forbidden extends Component {\n\n  render() {\n    return (\n      <div style={{height: 'calc(100vh - 64px)'}} >\n        <span>Forbidden</span>\n      </div>\n    )\n  }\n}\n\nexport default Forbidden\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport {selectors as dbSelectors} from 'store/db'\nimport { selectors as querySelectors } from 'store/queries'\nimport { selectors as sessionSelectors } from 'store/other/session'\nimport { Redirect } from 'react-router-dom'\nimport queryString from 'query-string'\nimport { Grid } from '@material-ui/core'\nimport { Loading } from 'components/Universal'\nimport { FlatButton, PostCard } from 'components/App/Shared'\nimport range from 'lodash/range'\nimport { BounceLoader } from 'react-spinners'\n\nimport styles from './FavoritePostsPage.module.css'\n\nclass FavoritePostsPage extends Component {\n\n  componentDidMount() {\n    this.props.getMyFavoritePosts()\n  }\n\n  render() {\n    let pageLoading = this.props.getMyFavoritePostsPending || this.props.posts == null\n    return (\n      <Loading loading={pageLoading} minTime={1000}>\n        {ready => {\n          if (!ready) {\n            return (\n              <div className={styles.pageLoading}>\n                <BounceLoader />\n              </div>\n            )\n          }\n          if (this.props.posts.length === 0) {\n            return (\n              <div className={styles.noPostsToShow}>\n                <span>You have not favorited any posts.</span>\n              </div>\n            )\n          }\n          return (\n            <Grid container className={styles.pageContainer}>\n                {this.props.posts.map((post) => (\n                  <Grid key={post.id} style={{padding: 24}} item xs={12} sm={6} lg={4}>\n                    <PostCard post={post} liked={post.likes.includes(this.props.session.user.id)}/>\n                  </Grid>\n                ))}\n            </Grid>\n          )\n        }}\n      </Loading>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  let postIdsSelector = querySelectors.createIdsSelector('Post', 'my-favorites')\n  let ids = postIdsSelector(state)\n  let postsSelector = dbSelectors.createEntitySelector('Post', ids)\n  return {\n    posts: postsSelector(state),\n    getMyFavoritePostsPending: apiSelectors.getMyFavoritePostsPending(state),\n    session: sessionSelectors.getSession(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  getMyFavoritePosts: apiActions.getMyFavoritePosts,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FavoritePostsPage)\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      `'Josefin Sans'`,\n      `sans-serif`\n    ].join(',')\n  },\n  palette: {\n    primary: {\n      main: '#FF6663',\n    },\n    secondary: {\n      main: '#edf1f0',\n    },\n  },\n})\n\nexport default theme\n","import App from './App'\n\nexport default App\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  actions as apiActions,\n  selectors as apiSelectors\n} from 'store/api'\nimport { Switch, Route } from 'react-router-dom'\nimport { PrivateRoute } from 'components/App/Shared'\nimport { LoginPage, PostListPage, FavoritePostsPage, AdminPage, Forbidden, Toolbar } from './Views'\nimport { rolesEnum } from 'enums'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\n\nimport styles from './App.module.css'; // Import css modules stylesheet as styles\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className={styles.app}>\n          <Toolbar />\n          <div className={styles.body}>\n            <Route\n              exact\n              path=\"/login\"\n              component={LoginPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin, rolesEnum.Author]}\n              exact\n              path=\"/\"\n              component={PostListPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin, rolesEnum.Author]}\n              exact\n              path=\"/favorites\"\n              component={FavoritePostsPage}\n            />\n            <PrivateRoute\n              permittedRoles={[rolesEnum.Admin]}\n              exact\n              path=\"/admin\"\n              component={AdminPage}\n            />\n            <Route\n              exact\n              path=\"/forbidden\"\n              component={Forbidden}\n            />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as sessionDuck from './session'\n\n/*\n*  The api module maintains async action info such as promise\n*  state, data, and errors. Api results can also be used to query\n*  the db module in cases where it makes sense.\n*/\n\nlet ducks = [\n  sessionDuck,\n]\n\nexport const reducers = ducks.reduce(\n  (reducerMap, duck) => {\n    reducerMap[duck.namespace] = duck.reducer\n    return reducerMap\n  },\n  {}\n)\n\nexport const actions = ducks.reduce(\n  (actionsMap, duck) => {\n    return {...actionsMap, ...duck.actions}\n  },\n  {}\n)\n\nexport const selectors = ducks.reduce(\n  (selectorsMap, duck) => {\n    return {...selectorsMap, ...duck.selectors}\n  },\n  {}\n)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport { reducers as queryReducers } from './queries'\nimport { reducers as apiReducers } from './api'\nimport { reducer as dbReducer } from './db'\nimport {\n  reducers as otherReducers,\n} from './other'\nimport {\n  selectors as sessionSelectors,\n  namespace as sessionNamespace\n} from './other/session'\nimport { loadState, saveState } from './localStorage'\nimport throttle from 'lodash/throttle'\n\nconst middleware = [ thunk, promiseMiddleware() ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst rootReducer = combineReducers({\n  ...apiReducers,\n  ...queryReducers,\n  ...otherReducers,\n  entities: dbReducer\n})\n\nconst initStore = () => {\n  const persistedState = loadState()\n\n  let store = createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(...middleware)\n  )\n\n  store.subscribe(throttle(() => {\n    let state = store.getState()\n    saveState({\n      [sessionNamespace]: sessionSelectors.getSession(state),\n    })\n  }, 1000))\n\n  return store\n}\n\nexport default initStore\n","import initStore from './initStore'\n\nexport default initStore()\n","\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from 'store'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoading\":\"PostListPage_pageLoading__1T6PL fit-viewport-body children-center fade-in\",\"pageContainer\":\"PostListPage_pageContainer__2gSz4 fade-in\",\"pagination\":\"PostListPage_pagination__2uawz\",\"paginationButton\":\"PostListPage_paginationButton__2rgo6\",\"paginationButtonActive\":\"PostListPage_paginationButtonActive__3Jx5g backgroundPrimary\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3eNSY border-bottom appBackgroundColor\",\"toolbarButton\":\"Toolbar_toolbarButton__2V5aS\",\"right\":\"Toolbar_right__3MvEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContainer\":\"Image_imgContainer__2qdeE\",\"imgFadeIn\":\"Image_imgFadeIn__VGvnq fade-in\",\"zoomImgOnHover\":\"Image_zoomImgOnHover__3T2Az\",\"loader\":\"Image_loader__2ntlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoading\":\"FavoritePostsPage_pageLoading__1lRBj fit-viewport-body children-center fade-in\",\"pageContainer\":\"FavoritePostsPage_pageContainer__2OReS fade-in\",\"noPostsToShow\":\"FavoritePostsPage_noPostsToShow__3ljaH fit-viewport-body children-center fade-in\"};"],"sourceRoot":""}